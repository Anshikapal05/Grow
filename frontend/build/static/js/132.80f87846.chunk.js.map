{"version":3,"file":"static/js/132.80f87846.chunk.js","mappings":"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","sources":["pages/consumer/Cart.jsx","store/useStore.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/use-sync-external-store/shim/with-selector.js","../node_modules/zustand/esm/vanilla.mjs","../node_modules/zustand/esm/index.mjs"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useStore from \"../../store/useStore\";\r\n\r\nconst Cart = () => {\r\n  const cartItems = useStore((state) => state.cartItems);\r\n  const removeFromCart = useStore((state) => state.removeFromCart);\r\n  const getTotalCartAmount = useStore((state) => state.getTotalCartAmount);\r\n\r\n  // const cartItems = useStore((state) => state.cartItems);\r\n  // const foodList = useStore((state) => state.foodList);\r\n  // const removeFromCart = useStore((state) => state.removeFromCart);\r\n  // const getTotalCartAmount = useStore((state) => state.getTotalCartAmount);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  console.log('Cart Items:', cartItems);\r\n  //console.log('Food List:', foodList);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      \r\n      {/* Existing code */}\r\n      <div className=\"cart-items\">\r\n        <div className=\"cart-item-title bold\">\r\n          <p>Item</p>\r\n          <p>Title</p>\r\n          <p>Price</p>\r\n          <p>Quantity</p>\r\n          <p>Total</p>\r\n          <p>Remove</p>\r\n        </div>\r\n        <br />\r\n        <hr />\r\n        <div>\r\n        {cartItems.map((item, index) => (\r\n            <div key={index}>\r\n              <div className=\"cart-item-title cart-item-item\">\r\n                <img src={item.photo} alt={item.name} />\r\n                <p>{item.name}</p>\r\n                <p>{item.price}</p>\r\n                <p>{item.quantity}</p>\r\n                <p>{item.price * item.quantity}</p>\r\n                <p onClick={() => removeFromCart(item._id)} className=\"cross\">x</p>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"cart-bottom\">\r\n        <div className=\"cart-total\">\r\n          <h2>Cart totals</h2>\r\n          <div>\r\n            <div className=\"cart-total-details\">\r\n              <p>Subtotal</p>\r\n              <p>{getTotalCartAmount()}</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"cart-total-details\">\r\n              <p>Delivery Fee</p>\r\n              <p>{getTotalCartAmount() === 0 ? 0 : 2}</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"cart-total-details\">\r\n              <b>Total</b>\r\n              <b>${getTotalCartAmount() === 0 ? 0 : getTotalCartAmount() + 2}</b>\r\n            </div>\r\n          </div>\r\n          <button onClick={() => navigate(\"/placeOrder\")}>\r\n            PROCEED TO CHECKOUT\r\n          </button>\r\n        </div>\r\n        <div className=\"cart-promocode\">\r\n          <div>\r\n            <p>If you have a promo code, Enter it here</p>\r\n            <div className=\"cart-promocode-input\">\r\n              <input type=\"text\" placeholder=\"promo code\" />\r\n              <button>Submit</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\nconst PRODUCT_API_URL = 'http://localhost:5000/api/v1/product';\r\nconst BACKEND_API_URL = 'http://localhost:5000/api/v1/product/new';\r\n\r\nconst useStore = create((set, get) => ({\r\n    cartItems: [],\r\n    foodList: [],\r\n    inputData: [],\r\n\r\n    addToCart: async (productId) => {\r\n        try {\r\n            const response = await axios.get(`${PRODUCT_API_URL}/${productId}`);\r\n            const product = response.data;\r\n            const existingProductIndex = get().cartItems.findIndex((item) => item._id === productId);\r\n\r\n            if (existingProductIndex !== -1) {\r\n                const updatedCartItems = [...get().cartItems];\r\n                updatedCartItems[existingProductIndex].quantity += 1;\r\n                set({ cartItems: updatedCartItems });\r\n            } else {\r\n                const updatedCartItems = [...get().cartItems, { ...product, quantity: 1 }];\r\n                set({ cartItems: updatedCartItems });\r\n            }\r\n\r\n            console.log(`Product ${product.name} added to cart`);\r\n        } catch (error) {\r\n            console.error('Error adding product to cart:', error);\r\n        }\r\n    },\r\n\r\n    removeFromCart: (productId) => set((state) => {\r\n        const newCartItems = [...state.cartItems];\r\n        const existingProductIndex = newCartItems.findIndex((item) => item._id === productId);\r\n        if (existingProductIndex !== -1) {\r\n            newCartItems[existingProductIndex].quantity -= 1;\r\n            if (newCartItems[existingProductIndex].quantity === 0) {\r\n                newCartItems.splice(existingProductIndex, 1);\r\n            }\r\n        }\r\n        return { cartItems: newCartItems };\r\n    }),\r\n\r\n    getTotalCartAmount: () => {\r\n        const { cartItems } = get();\r\n        let total = 0;\r\n        cartItems.forEach((item) => {\r\n            total += item.price * item.quantity;\r\n        });\r\n        return total;\r\n    },\r\n\r\n    setFoodList: (foodList) => set({ foodList }),\r\n\r\n    fetchFoodList: async () => {\r\n        try {\r\n            const response = await axios.get(PRODUCT_API_URL);\r\n            set({ foodList: response.data });\r\n        } catch (error) {\r\n            console.error('Failed to fetch food list:', error);\r\n        }\r\n    },\r\n\r\n    addInputData: (data) => {\r\n        console.log('Input data:', data);\r\n        set((state) => ({ inputData: [...state.inputData, data] }));\r\n    },\r\n\r\n    sendInputDataToBackend: async (data) => {\r\n        try {\r\n            const token = 'Dabbemein4098'; // Replace this with your actual token\r\n\r\n            const formattedData = {\r\n                name: data.name,\r\n                photo: data.photo,\r\n                price: parseFloat(data.price),\r\n                stock: parseInt(data.stock, 10),\r\n            };\r\n\r\n            const response = await axios.post(BACKEND_API_URL, formattedData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`, // Adjust based on backend requirements\r\n                },\r\n            });\r\n\r\n            console.log('Input data sent to the backend:', response.data);\r\n        } catch (error) {\r\n            console.error('Error sending input data to the backend:', error);\r\n        }\r\n    },\r\n}));\r\n\r\nexport default useStore;\r\n\r\n// import { create } from 'zustand';\r\n// import axios from 'axios';\r\n\r\n// const PRODUCT_API_URL = 'http://localhost:5000/api/v1/product';\r\n// const BACKEND_API_URL = 'http://localhost:5000/api/v1/product/new';\r\n\r\n// const useStore = create((set, get) => ({\r\n//     cartItems: [],\r\n//     foodList: [],\r\n//     inputData: [],\r\n\r\n//     addToCart: async (productId) => {\r\n//         try {\r\n//             const response = await axios.get(`${PRODUCT_API_URL}/${productId}`);\r\n//             const product = response.data;\r\n//             const existingProductIndex = get().cartItems.findIndex((item) => item._id === productId);\r\n\r\n//             if (existingProductIndex !== -1) {\r\n//                 const updatedCartItems = [...get().cartItems];\r\n//                 updatedCartItems[existingProductIndex].quantity += 1;\r\n//                 set({ cartItems: updatedCartItems });\r\n//             } else {\r\n//                 const updatedCartItems = [...get().cartItems, { ...product, quantity: 1 }];\r\n//                 set({ cartItems: updatedCartItems });\r\n//             }\r\n\r\n//             console.log(`Product ${product.name} added to cart`);\r\n//         } catch (error) {\r\n//             console.error('Error adding product to cart:', error);\r\n//         }\r\n//     },\r\n\r\n//     removeFromCart: (productId) => set((state) => {\r\n//         const newCartItems = [...state.cartItems];\r\n//         const existingProductIndex = newCartItems.findIndex((item) => item._id === productId);\r\n//         if (existingProductIndex !== -1) {\r\n//             newCartItems[existingProductIndex].quantity -= 1;\r\n//             if (newCartItems[existingProductIndex].quantity === 0) {\r\n//                 newCartItems.splice(existingProductIndex, 1);\r\n//             }\r\n//         }\r\n//         return { cartItems: newCartItems };\r\n//     }),\r\n\r\n//     getTotalCartAmount: () => {\r\n//         const { cartItems } = get();\r\n//         let total = 0;\r\n//         cartItems.forEach((item) => {\r\n//             total += item.price * item.quantity;\r\n//         });\r\n//         return total;\r\n//     },\r\n\r\n//     setFoodList: (foodList) => set({ foodList }),\r\n\r\n//     fetchFoodList: async () => {\r\n//         try {\r\n//             const response = await axios.get(PRODUCT_API_URL);\r\n//             set({ foodList: response.data });\r\n//         } catch (error) {\r\n//             console.error('Failed to fetch food list:', error);\r\n//         }\r\n//     },\r\n\r\n//     addInputData: (data) => {\r\n//         console.log('Input data:', data);\r\n//         set((state) => ({ inputData: [...state.inputData, data] }));\r\n//     },\r\n\r\n//     sendInputDataToBackend: async (data) => {\r\n//         try {\r\n//             const formattedData = {\r\n//                 \"name\": data.name,\r\n//                 \"photo\": data.photo,\r\n//                 \"price\": parseFloat(data.price),\r\n//                 \"stock\": parseInt(data.stock, 10),\r\n//             };\r\n\r\n//             const response = await axios.post(BACKEND_API_URL, formattedData);\r\n//             console.log('Input data sent to the backend:', response.data);\r\n//         } catch (error) {\r\n//             console.error('Error sending input data to the backend:', error);\r\n//         }\r\n//     },\r\n// }));\r\n\r\n// export default useStore;\r\n\r\n\r\n// // import { create } from 'zustand';\r\n// // import axios from 'axios';\r\n\r\n// // // Example backend URL endpoint\r\n// // const PRODUCT_API_URL = 'http://localhost:5000/api/v1/product';\r\n// // const BACKEND_API_URL = 'http://localhost:5000/api/v1/product/new';\r\n\r\n// // const useStore = create((set, get) => ({\r\n// //   cartItems: [], // Initialize as an empty array\r\n// //   foodList: [], // Empty initially\r\n// //   inputData: [],\r\n\r\n// //   // addToCart: async (productId) => {\r\n// //   //   try {\r\n// //   //     // Fetch the product details from the backend API\r\n// //   //     const response = await axios.get(`${PRODUCT_API_URL}/${productId}`);\r\n// //   //     const product = response.data; // Assuming the response data contains the product details\r\n\r\n// //   //     // Check if the product already exists in the cart\r\n// //   //     const existingProductIndex = get().cartItems.findIndex((item) => item.productId === productId);\r\n\r\n// //   //     if (existingProductIndex !== -1) {\r\n// //   //       // If the product already exists, increment its quantity\r\n// //   //       const updatedCartItems = [...get().cartItems];\r\n// //   //       updatedCartItems[existingProductIndex].quantity += 1;\r\n// //   //       set({ cartItems: updatedCartItems });\r\n// //   //     } else {\r\n// //   //       // If the product doesn't exist, add it to the cart\r\n// //   //       const updatedCartItems = [...get().cartItems, { ...product, quantity: 1 }];\r\n// //   //       set({ cartItems: updatedCartItems });\r\n// //   //     }\r\n\r\n// //   //     // Log the action\r\n// //   //     console.log(`Product ${product.name} added to cart`);\r\n// //   //   } catch (error) {\r\n// //   //     console.error('Error adding product to cart:', error);\r\n// //   //   }\r\n// //   // },\r\n\r\n// //   addToCart: async (productId) => {\r\n// //     try {\r\n// //       // Fetch the product details from the backend API\r\n// //       const response = await axios.get(`${PRODUCT_API_URL}/${productId}`);\r\n// //       const product = response.data; // Assuming the response data contains the product details\r\n\r\n// //       // Check if the product already exists in the cart\r\n// //       const existingProductIndex = get().cartItems.findIndex((item) => item._id === productId);\r\n\r\n// //       if (existingProductIndex !== -1) {\r\n// //         // If the product already exists, increment its quantity\r\n// //         const updatedCartItems = [...get().cartItems];\r\n// //         updatedCartItems[existingProductIndex].quantity += 1;\r\n// //         set({ cartItems: updatedCartItems });\r\n// //       } else {\r\n// //         // If the product doesn't exist, add it to the cart\r\n// //         const updatedCartItems = [...get().cartItems, { ...product, quantity: 1 }];\r\n// //         set({ cartItems: updatedCartItems });\r\n// //       }\r\n\r\n// //       // Log the action\r\n// //       console.log(`Product ${product.name} added to cart`);\r\n// //     } catch (error) {\r\n// //       console.error('Error adding product to cart:', error);\r\n// //     }\r\n// //   },\r\n\r\n// //   // removeFromCart: (productId) => set((state) => {\r\n// //   //   const newCartItems = [...state.cartItems]; // Convert cartItems to an array\r\n// //   //   const existingProductIndex = get().cartItems.findIndex((item) => item.productId === productId);\r\n// //   //   if (existingProductIndex !== -1) {\r\n// //   //     newCartItems[existingProductIndex].quantity -= 1;\r\n// //   //     if (newCartItems[existingProductIndex].quantity === 0) {\r\n// //   //       newCartItems.splice(existingProductIndex, 1); // Remove the item if quantity becomes 0\r\n// //   //     }\r\n// //   //   }\r\n// //   //   return { cartItems: newCartItems };\r\n// //   // }),\r\n\r\n// //   removeFromCart: (productId) => set((state) => {\r\n// //     const newCartItems = [...state.cartItems]; // Convert cartItems to an array\r\n// //     const existingProductIndex = newCartItems.findIndex((item) => item._id === productId);\r\n// //     if (existingProductIndex !== -1) {\r\n// //       newCartItems[existingProductIndex].quantity -= 1;\r\n// //       if (newCartItems[existingProductIndex].quantity === 0) {\r\n// //         newCartItems.splice(existingProductIndex, 1); // Remove the item if quantity becomes 0\r\n// //       }\r\n// //     }\r\n// //     return { cartItems: newCartItems };\r\n// //   }),\r\n// //   getTotalCartAmount: () => {\r\n// //     const { cartItems } = get(); // No need for foodList\r\n// //     let total = 0;\r\n// //     cartItems.forEach((item) => {\r\n// //       total += item.price * item.quantity;\r\n// //     });\r\n// //     return total;\r\n// //   },\r\n\r\n// //   setFoodList: (foodList) => set({ foodList }),\r\n\r\n// //   // Fetch food list from backend\r\n// //   fetchFoodList: async () => {\r\n// //     try {\r\n// //       const response = await axios.get(PRODUCT_API_URL);\r\n// //       set({ foodList: response.data });\r\n// //     } catch (error) {\r\n// //       console.error('Failed to fetch food list:', error);\r\n// //     }\r\n// //   },\r\n// //   addInputData: (data) => {\r\n// //     // Function to add input data to the inputData array\r\n// //     console.log('Input data:', data);\r\n// //     set((state) => ({ inputData: [...state.inputData, data] }));\r\n// //   },\r\n  \r\n// //   sendInputDataToBackend: async (data) => {\r\n// //       try {\r\n// //         // Send input data to the backend\r\n// //         const formattedData = {\r\n// //           \"name\": `${data.name}`,\r\n// //           \"photo\": `${data.photo}`,\r\n// //           \"price\": parseFloat(data.price), // Convert price to a number if needed\r\n// //           \"stock\": parseInt(data.stock), // Convert stock to a number if needed\r\n// //         };\r\n    \r\n// //         // Send input data to the backend\r\n// //         console.log('Input data:', formattedData);\r\n// //         //console.log('Input data:', data);\r\n// //         // const response = await axios.post(BACKEND_API_URL, data);\r\n// //         const response = await axios.post(`${BACKEND_API_URL}`, formattedData);\r\n// //         console.log('Input data sent to the backend:', response.data);\r\n// //       } catch (error) {\r\n// //         console.error('Error sending input data to the backend:', error);\r\n// //       }\r\n// //     },\r\n// // }));\r\n\r\n\r\n\r\n// // export default useStore;\r\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n"],"names":["Cart","cartItems","useStore","state","removeFromCart","getTotalCartAmount","navigate","useNavigate","console","log","_jsxs","className","children","_jsx","map","item","index","src","photo","alt","name","price","quantity","onClick","_id","type","placeholder","PRODUCT_API_URL","create","set","get","foodList","inputData","addToCart","async","product","axios","concat","productId","data","existingProductIndex","findIndex","updatedCartItems","error","newCartItems","splice","total","forEach","setFoodList","fetchFoodList","response","addInputData","sendInputDataToBackend","token","formattedData","parseFloat","stock","parseInt","post","headers","Authorization","e","require","k","Object","is","a","b","l","useState","m","useEffect","n","useLayoutEffect","p","useDebugValue","r","getSnapshot","value","d","f","u","window","document","createElement","inst","c","g","exports","useSyncExternalStore","h","q","t","useRef","v","useMemo","w","useSyncExternalStoreWithSelector","current","hasValue","module","createStoreImpl","createState","listeners","Set","setState","partial","replace","nextState","previousState","assign","listener","getState","api","getInitialState","initialState","subscribe","add","delete","destroy","warn","clear","createStore","ReactExports","useSyncExternalStoreExports","didWarnAboutEqualityFn","identity","arg","createImpl","useBoundStore","selector","equalityFn","arguments","length","undefined","slice","getServerState"],"sourceRoot":""}