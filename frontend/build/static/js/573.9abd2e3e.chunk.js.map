{"version":3,"file":"static/js/573.9abd2e3e.chunk.js","mappings":"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","sources":["components/consumer/RecipeCard.jsx","components/consumer/RecipeList.jsx","components/consumer/HealthList.jsx","components/consumer/Calories.jsx","pages/consumer/SmartBite.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst RecipeCard = ({ recipe }) => {\r\n    return (\r\n        <div className='recipe-card'>\r\n            \r\n            <img src={recipe.image} alt={recipe.label} />\r\n            <h2 className='recipe-name'>{recipe.name}</h2>\r\n            <ul>\r\n                {recipe.ingredientLines && Array.isArray(recipe.ingredientLines) && // Check if ingredientLines is defined and is an array\r\n                    recipe.ingredientLines.map((ingredient, index) => (\r\n                        <li key={index}>{ingredient}</li>\r\n                    ))}\r\n            </ul>\r\n            <p>Calories: {Math.round(recipe.calories)}</p>\r\n            <a href={recipe.url} target=\"_blank\" rel=\"noopener noreferrer\">View Recipe</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeCard;","import React, { useEffect, useState } from 'react';\r\nimport RecipeCard from './RecipeCard';\r\nimport axios from 'axios';\r\n\r\nconst RecipeList = ({ query }) => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/v1/recipe/recipes?q=${query}`);\r\n        setRecipes(response.data || []); // Ensure recipes is an array\r\n      } catch (err) {\r\n        setError('Failed to fetch recipes');\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchRecipes();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      <h1>Recipe List</h1>\r\n      <div className=\"recipe-card-list\">\r\n        {error ? (\r\n          <p>{error}</p>\r\n        ) : recipes.length > 0 ? (\r\n          recipes.map(recipe => (\r\n            <RecipeCard\r\n              key={recipe.id}\r\n              recipe={recipe} // Pass the recipe object directly\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No recipes found</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import RecipeCard from './RecipeCard';\r\n\r\n// const RecipeList = () => {\r\n//   const [recipes, setRecipes] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipes = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:3000/api/v1/recipe/recipes?q=onion');\r\n//         setRecipes(response.data|| []); // Ensure recipes is an array\r\n//       } catch (err) {\r\n//         setError('Failed to fetch recipes');\r\n//         console.error(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchRecipes();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"recipe-list\">\r\n//       <h1>Recipe List</h1>\r\n//       <div className=\"recipecard_list\">\r\n\r\n      \r\n//       {error ? (\r\n//         <p>{error}</p>\r\n//       ) : (\r\n//         recipes.length > 0 ? (\r\n//           recipes.map(recipe => (\r\n//             <RecipeCard\r\n//               key={recipe.id}\r\n//               name={recipe.name}\r\n//               image={recipe.image}\r\n//               url={recipe.url}\r\n//               ingredients={recipe.ingredients}\r\n//             //   nutrients={recipe.nutrients}\r\n//               calories={recipe.calories}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           <p>Loading recipes...</p>\r\n//         )\r\n//       )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RecipeList;","import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport RecipeCard from './RecipeCard';\r\nimport axios from 'axios';\r\n\r\n\r\nconst HealthList = ({ query }) => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [error, setError] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const fetchRecipes = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:5000/api/v1/recipe/recipes?health=${query}`);\r\n          setRecipes(response.data || []); // Ensure recipes is an array\r\n        } catch (err) {\r\n          setError('Failed to fetch recipes');\r\n          console.error(err);\r\n        }\r\n      };\r\n  \r\n      fetchRecipes();\r\n    }, [query]);\r\n  \r\n    return (\r\n      <div className=\"recipe-list\">\r\n        <h1>Recipe List</h1>\r\n        <div className=\"recipe-card-list\">\r\n          {error ? (\r\n            <p>{error}</p>\r\n          ) : recipes.length > 0 ? (\r\n            recipes.map(recipe => (\r\n              <RecipeCard\r\n                key={recipe.id}\r\n                recipe={recipe} // Pass the recipe object directly\r\n              />\r\n            ))\r\n          ) : (\r\n            <p>No recipes found</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default HealthList\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import RecipeCard from './RecipeCard';\r\n\r\n// const RecipeList = () => {\r\n//   const [recipes, setRecipes] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipes = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:3000/api/v1/recipe/recipes?q=onion');\r\n//         setRecipes(response.data|| []); // Ensure recipes is an array\r\n//       } catch (err) {\r\n//         setError('Failed to fetch recipes');\r\n//         console.error(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchRecipes();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"recipe-list\">\r\n//       <h1>Recipe List</h1>\r\n//       <div className=\"recipecard_list\">\r\n\r\n      \r\n//       {error ? (\r\n//         <p>{error}</p>\r\n//       ) : (\r\n//         recipes.length > 0 ? (\r\n//           recipes.map(recipe => (\r\n//             <RecipeCard\r\n//               key={recipe.id}\r\n//               name={recipe.name}\r\n//               image={recipe.image}\r\n//               url={recipe.url}\r\n//               ingredients={recipe.ingredients}\r\n//             //   nutrients={recipe.nutrients}\r\n//               calories={recipe.calories}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           <p>Loading recipes...</p>\r\n//         )\r\n//       )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RecipeList;","import React, { useEffect, useState } from 'react';\r\nimport RecipeCard from './RecipeCard';\r\nimport axios from 'axios';\r\n\r\nconst Calories = ({ query }) => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/v1/recipe/recipes?calories=${query}`);\r\n        setRecipes(response.data || []); // Ensure recipes is an array\r\n      } catch (err) {\r\n        setError('Failed to fetch recipes');\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchRecipes();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      <h1>Recipe List</h1>\r\n      <div className=\"recipe-card-list\">\r\n        {error ? (\r\n          <p>{error}</p>\r\n        ) : recipes.length > 0 ? (\r\n          recipes.map(recipe => (\r\n            <RecipeCard\r\n              key={recipe.id}\r\n              recipe={recipe} // Pass the recipe object directly\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No recipes found</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calories;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import RecipeCard from './RecipeCard';\r\n\r\n// const RecipeList = () => {\r\n//   const [recipes, setRecipes] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipes = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:3000/api/v1/recipe/recipes?q=onion');\r\n//         setRecipes(response.data|| []); // Ensure recipes is an array\r\n//       } catch (err) {\r\n//         setError('Failed to fetch recipes');\r\n//         console.error(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchRecipes();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"recipe-list\">\r\n//       <h1>Recipe List</h1>\r\n//       <div className=\"recipecard_list\">\r\n\r\n      \r\n//       {error ? (\r\n//         <p>{error}</p>\r\n//       ) : (\r\n//         recipes.length > 0 ? (\r\n//           recipes.map(recipe => (\r\n//             <RecipeCard\r\n//               key={recipe.id}\r\n//               name={recipe.name}\r\n//               image={recipe.image}\r\n//               url={recipe.url}\r\n//               ingredients={recipe.ingredients}\r\n//             //   nutrients={recipe.nutrients}\r\n//               calories={recipe.calories}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           <p>Loading recipes...</p>\r\n//         )\r\n//       )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RecipeList;","import React, { useState } from \"react\";\r\nimport RecipeList from \"../../components/consumer/RecipeList\";\r\nimport HealthList from \"../../components/consumer/HealthList\";\r\nimport Calories from \"../../components/consumer/Calories\";\r\n\r\nconst SmartBite = () => {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [disease, setDisease] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [height, setHeight] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const calculateCalories = () => {\r\n    // Calculate average daily calories needed based on age, weight, height, and gender\r\n    // Example formula (this can be adjusted based on actual calculation)\r\n    const baseCalories = gender === \"male\" ? 66.5 : 65.5;\r\n    const ageFactor = age * 6.8;\r\n    const weightFactor = weight * 13.75;\r\n    const heightFactor = height * 5.003;\r\n    const caloriesNeeded =\r\n      baseCalories + weightFactor + heightFactor - ageFactor;\r\n    return caloriesNeeded;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let data = { category };\r\n    if (category === \"health\") {\r\n      setSubmitted(true); // Set submitted to true when the form is submitted for health\r\n    } else if (category === \"nutrition\") {\r\n      data.age = age;\r\n      data.weight = weight;\r\n      data.height = height;\r\n      data.gender = gender;\r\n    } else if (category === \"Random Recipe\") {\r\n      setSubmitted(true); // Set submitted to true when the form is submitted for random recipe\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"advisory-container\">\r\n      <section className=\"advisory\">\r\n        <h1>Advisory App</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"category\">Choose a category:</label>\r\n            <select\r\n              id=\"category\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"health\">Health</option>\r\n              <option value=\"nutrition\">Nutrition</option>\r\n              <option value=\"Random Recipe\">Random Recipe</option>\r\n            </select>\r\n          </div>\r\n\r\n          {category === \"health\" && (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={disease} // Use disease state for health input\r\n                onChange={(e) => setDisease(e.target.value)} // Update disease state\r\n                placeholder=\"Enter your allergy\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {category === \"nutrition\" && (\r\n            <div>\r\n              <label htmlFor=\"age\">Age:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"age\"\r\n                value={age}\r\n                onChange={(e) => setAge(e.target.value)}\r\n              />\r\n              <label htmlFor=\"weight\">Weight (kg):</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              />\r\n              <label htmlFor=\"height\">Height (cm):</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"height\"\r\n                value={height}\r\n                onChange={(e) => setHeight(e.target.value)}\r\n              />\r\n              <label htmlFor=\"gender\">Gender:</label>\r\n              <select\r\n                id=\"gender\"\r\n                value={gender}\r\n                onChange={(e) => setGender(e.target.value)}\r\n              >\r\n                <option value=\"\">Select</option>\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {category === \"Random Recipe\" && (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                value={query}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter any vegetable\"\r\n              />\r\n              {/* Pass the query state */}\r\n            </div>\r\n          )}\r\n\r\n          <button type=\"submit\">Get Advice</button>\r\n        </form>\r\n      </section>\r\n\r\n      {/* {(submitted && (category === 'Random Recipe' || category === 'health' || category === 'nutrition')) && (\r\n                \r\n                    if(category === 'health'){\r\n                        <div className=\"recipe-container\">\r\n                        <HealthList query = {disease} />\r\n                        </div>\r\n                    }\r\n                    else if(category === 'nutrition'){\r\n                        <div className=\"recipe-container\">\r\n                        <Calories query = {calculateCalories()} />\r\n                        </div>\r\n                    }\r\n                    else{\r\n                        <div className=\"recipe-container\">\r\n                        <RecipeList query={query || disease || calculateCalories()} />\r\n                        </div>\r\n                    }\r\n                    \r\n                \r\n            )} */}\r\n      {submitted &&\r\n        (category === \"Random Recipe\" ||\r\n          category === \"health\" ||\r\n          category === \"nutrition\") && (\r\n          <div className=\"recipe-container\">\r\n            {category === \"health\" ? (\r\n              <HealthList query={disease} />\r\n            ) : category === \"nutrition\" ? (\r\n              <Calories query={calculateCalories()} />\r\n            ) : (\r\n              <RecipeList query={query || disease || calculateCalories()} />\r\n            )}\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmartBite;\r\n\r\n// import React, { useState } from 'react';\r\n// import RecipeList from '../../components/consumer/RecipeList';\r\n\r\n// const SmartBite = () => {\r\n//     const [category, setCategory] = useState('');\r\n//     const [disease, setDisease] = useState('');\r\n//     const [age, setAge] = useState('');\r\n//     const [weight, setWeight] = useState('');\r\n//     const [height, setHeight] = useState('');\r\n//     const [gender, setGender] = useState('');\r\n//     const [result, setResult] = useState('');\r\n//     const [query, setQuery] = useState('');\r\n//     const [submitted, setSubmitted] = useState(false);\r\n\r\n//   const handleInputChange = (event) => {\r\n//     setQuery(event.target.value);\r\n//   };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         let data = { category };\r\n//         if (category === 'health') {\r\n//             e.preventDefault();\r\n//         // Your form submission logic\r\n//             setSubmitted(true);\r\n//         } else if (category === 'nutrition') {\r\n//             data.age = age;\r\n//             data.weight = weight;\r\n//             data.height = height;\r\n//             data.gender = gender;\r\n//         } else if (category === 'Random Recipe') {\r\n//             e.preventDefault();\r\n//         // Your form submission logic\r\n//             setSubmitted(true);\r\n//         }\r\n\r\n//         // const response = await fetch('http://127.0.0.1:3000/advisory', {\r\n//         //     method: 'POST',\r\n//         //     headers: {\r\n//         //         'Content-Type': 'application/json',\r\n//         //     },\r\n//         //     body: JSON.stringify(data),\r\n//         // });\r\n\r\n//         // const result = await response.json();\r\n//         // setResult(result);\r\n//     };\r\n//     return (\r\n//         <div className='advisory-container' >\r\n//             <section className=\"advisory\">\r\n//                 <h1>Advisory App</h1>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div>\r\n//                         <label htmlFor=\"category\">Choose a category:</label>\r\n//                         <select id=\"category\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n//                             <option value=\"\">Select</option>\r\n//                             <option value=\"health\">Health</option>\r\n//                             <option value=\"nutrition\">Nutrition</option>\r\n//                             <option value=\"Random Recipe\">Random Recipe</option>\r\n//                         </select>\r\n//                     </div>\r\n\r\n//                     {category === 'health' && (\r\n//                         <div>\r\n//                             <input\r\n//                             type=\"text\"\r\n//                             value={query}\r\n//                             onChange={handleInputChange}\r\n//                             placeholder=\"Enter any vegetable\"\r\n//                             />\r\n//                         </div>\r\n//                     )}\r\n\r\n//                     {category === 'nutrition' && (\r\n//                         <div>\r\n//                             <label htmlFor=\"age\">Age:</label>\r\n//                             <input type=\"number\" id=\"age\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n//                             <label htmlFor=\"weight\">Weight (kg):</label>\r\n//                             <input type=\"number\" id=\"weight\" value={weight} onChange={(e) => setWeight(e.target.value)} />\r\n//                             <label htmlFor=\"height\">Height (cm):</label>\r\n//                             <input type=\"number\" id=\"height\" value={height} onChange={(e) => setHeight(e.target.value)} />\r\n//                             <label htmlFor=\"gender\">Gender:</label>\r\n//                             <select id=\"gender\" value={gender} onChange={(e) => setGender(e.target.value)}>\r\n//                                 <option value=\"\">Select</option>\r\n//                                 <option value=\"male\">Male</option>\r\n//                                 <option value=\"female\">Female</option>\r\n//                             </select>\r\n//                         </div>\r\n//                     )}\r\n//                     {category === 'Random Recipe' && (\r\n//             <div>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={query}\r\n//                 onChange={handleInputChange}\r\n//                 placeholder=\"Enter any vegetable\"\r\n//               />\r\n//                {/* Pass the query state */}\r\n//             </div>\r\n//           )}\r\n\r\n//                     <button type=\"submit\">Get Advice</button>\r\n//                 </form>\r\n\r\n//                 {/* {result && (\r\n//                     <div>\r\n//                         <h2>Result</h2>\r\n//                         <pre>{JSON.stringify(result, null, 2)}</pre>\r\n//                     </div>\r\n//                 )} */}\r\n//             </section>\r\n\r\n//             {category === 'Random Recipe' && (\r\n//             <div className=\"recipe-container\">\r\n//                 <RecipeList query={query} />\r\n//             </div>)\r\n\r\n//             }\r\n//             {\r\n//             category === 'Health' && (\r\n//             <div className=\"recipe-container\">\r\n//                 <RecipeList query={disease} />\r\n//             </div>)\r\n//             }\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default SmartBite;\r\n"],"names":["_ref","recipe","_jsxs","className","children","_jsx","src","image","alt","label","name","ingredientLines","Array","isArray","map","ingredient","index","Math","round","calories","href","url","target","rel","query","recipes","setRecipes","useState","error","setError","useEffect","async","response","axios","get","concat","data","err","console","fetchRecipes","length","RecipeCard","id","SmartBite","category","setCategory","disease","setDisease","age","setAge","weight","setWeight","height","setHeight","gender","setGender","setQuery","submitted","setSubmitted","calculateCalories","onSubmit","e","preventDefault","htmlFor","value","onChange","type","placeholder","event","HealthList","Calories","RecipeList"],"sourceRoot":""}