{"version":3,"file":"static/js/155.7142d937.chunk.js","mappings":"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","sources":["components/admin/AdminSlidebar.jsx","components/admin/TableHOC.jsx","components/admin/Chart.jsx","pages/admin/Dashboard.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { RiCoupon3Fill, RiDashboardFill, RiShoppingBagFill } from 'react-icons/ri';\r\nimport { AiFillFileText, AiOutlineBarChart, AiOutlineLineChart, AiOutlinePieChart } from 'react-icons/ai';\r\nimport { IoIosPeople, IoLogoGameControllerB } from 'react-icons/io';\r\n\r\nconst AdminSidebar = () => {\r\n  return (\r\n    <aside>\r\n      <h2 className='green'>Grow.</h2>\r\n      <DivOne />\r\n      {/* <DivTwo />\r\n      <DivThree /> */}\r\n    </aside>\r\n  );\r\n};\r\n\r\nconst DivOne = () => (\r\n  <div>\r\n    <h5>Dashboard</h5>\r\n    <ul>\r\n      <Li text=\"Dashboard\" url=\"/admin/dashboard\" Icon={RiDashboardFill} />\r\n      <Li text=\"Products\" url=\"/admin/products\" Icon={RiShoppingBagFill} />\r\n      <Li text=\"Customer\" url=\"/admin/customers\" Icon={IoIosPeople} />\r\n      <Li text=\"Transaction\" url=\"/admin/transaction\" Icon={AiFillFileText} />\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst DivTwo = () => (\r\n  <div>\r\n    <h5>Charts</h5>\r\n    <ul>\r\n      <Li text=\"Bar\" url=\"/admin/chart/bar\" Icon={AiOutlineBarChart} />\r\n      <Li text=\"Pie\" url=\"/admin/chart/pie\" Icon={AiOutlinePieChart} />\r\n      <Li text=\"Line\" url=\"/admin/chart/line\" Icon={AiOutlineLineChart} />\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst DivThree = () => (\r\n  <div>\r\n    <h5>Apps</h5>\r\n    <ul>\r\n      <Li text=\"Coupon\" url=\"/admin/app/coupon\" Icon={RiCoupon3Fill} />\r\n      <Li text=\"Snake Game\" url=\"/admin/app/snake-game\" Icon={IoLogoGameControllerB} />\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst Li = ({ url, text, Icon }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <li\r\n      style={{\r\n        backgroundColor: location.pathname.includes(url) ? 'rgba(0,115,255,0.1)' : 'white',\r\n      }}\r\n    >\r\n      <Link\r\n        to={url}\r\n        style={{\r\n          color: location.pathname.includes(url) ? 'rgba(0,115,255)' : 'black',\r\n        }}\r\n      >\r\n        <Icon />\r\n        {text}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AdminSidebar;\r\n","import React from 'react';\r\nimport { useTable, useSortBy } from 'react-table';\r\n\r\nfunction TableHOC(columns, data, containerClassname, heading) {\r\n  return function HOC() {\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n      },\r\n      useSortBy\r\n    );\r\n\r\n    return (\r\n      <div className={containerClassname}>\r\n        <h2 className=\"heading\">{heading}</h2>\r\n        <table className=\"table\" {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render('Header')}\r\n                    {column.isSorted && (\r\n                      <span> {column.isSortedDesc ? 'ðŸ”½' : 'ðŸ”¼'}</span>\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default TableHOC;\r\n","import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n    PointElement,\r\n    LineElement,\r\n    Filler,\r\n  } from 'chart.js';\r\n  import { Bar, Doughnut, Line, Pie } from 'react-chartjs-2';\r\n  \r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n    PointElement,\r\n    LineElement,\r\n    Filler\r\n  );\r\n  \r\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n  \r\n  export const BarChart = ({\r\n    data_1 = [],\r\n    data_2 = [],\r\n    title_1,\r\n    title_2,\r\n    bgColor_1,\r\n    bgColor_2,\r\n    horizontal = false,\r\n    labels = months,\r\n  }) => {\r\n    const options = {\r\n      responsive: true,\r\n      indexAxis: horizontal ? 'y' : 'x',\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        title: {\r\n          display: false,\r\n        },\r\n      },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n        x: {\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n      },\r\n    };\r\n  \r\n    const data = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: title_1,\r\n          data: data_1,\r\n          backgroundColor: bgColor_1,\r\n          barThickness: 'flex',\r\n          barPercentage: 1,\r\n          categoryPercentage: 0.4,\r\n        },\r\n        {\r\n          label: title_2,\r\n          data: data_2,\r\n          backgroundColor: bgColor_2,\r\n          barThickness: 'flex',\r\n          barPercentage: 1,\r\n          categoryPercentage: 0.4,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    return <Bar width={horizontal ? '200%' : ''} options={options} data={data} />;\r\n  };\r\n  \r\n  export const DoughnutChart = ({\r\n    labels,\r\n    data,\r\n    backgroundColor,\r\n    cutout,\r\n    legends = true,\r\n    offset,\r\n  }) => {\r\n    const doughnutData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          data,\r\n          backgroundColor,\r\n          borderWidth: 0,\r\n          offset,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    const doughnutOptions = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          display: legends,\r\n          position: 'bottom',\r\n          labels: {\r\n            padding: 40,\r\n          },\r\n        },\r\n      },\r\n      cutout,\r\n    };\r\n  \r\n    return <Doughnut data={doughnutData} options={doughnutOptions} />;\r\n  };\r\n  \r\n  export const PieChart = ({ labels, data, backgroundColor, offset }) => {\r\n    const pieChartData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          data,\r\n          backgroundColor,\r\n          borderWidth: 1,\r\n          offset,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    const pieChartOptions = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n    };\r\n  \r\n    return <Pie data={pieChartData} options={pieChartOptions} />;\r\n  };\r\n  \r\n  export const LineChart = ({\r\n    data,\r\n    label,\r\n    backgroundColor,\r\n    borderColor,\r\n    labels = months,\r\n  }) => {\r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        title: {\r\n          display: false,\r\n        },\r\n      },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n        x: {\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n      },\r\n    };\r\n  \r\n    const lineChartData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          fill: true,\r\n          label,\r\n          data,\r\n          backgroundColor,\r\n          borderColor,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    return <Line options={options} data={lineChartData} />;\r\n  };\r\n  ","import React from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport AdminSidebar from \"../../components/admin/AdminSlidebar\";\r\nimport { FaRegBell } from \"react-icons/fa\";\r\nimport UserImg from \"../../assets/admin/userpic.png\";\r\nimport { HiTrendingDown, HiTrendingUp } from \"react-icons/hi\";\r\nimport data from \"../../assets/admin/data.json\";\r\nimport { BarChart, DoughnutChart } from \"../../components/admin/Chart\";\r\nimport { BiMaleFemale } from \"react-icons/bi\";\r\nimport Table from \"../../components/admin/DashboardTable\";\r\nimport '../../styles/admin/App.scss'\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <AdminSidebar />\r\n      <main className=\"dashboard\">\r\n        <div className=\"bar\">\r\n          <BsSearch />\r\n          <input type=\"text\" placeholder=\"Search for data, users, docs\" />\r\n          <FaRegBell />\r\n          <img src={UserImg} alt=\"User\" />\r\n        </div>\r\n\r\n        <section className=\"widget-container\">\r\n          <WidgetItem\r\n            percent={40}\r\n            amount={true}\r\n            value={340000}\r\n            heading=\"Revenue\"\r\n            color=\"rgb(0,115,255)\"\r\n          />\r\n\r\n          <WidgetItem\r\n            percent={-14}\r\n            value={400}\r\n            heading=\"Users\"\r\n            color=\"rgb(0,198,202)\"\r\n          />\r\n\r\n          <WidgetItem\r\n            percent={80}\r\n            value={23000}\r\n            heading=\"Transactions\"\r\n            color=\"rgb(255 196 0)\"\r\n          />\r\n\r\n          <WidgetItem\r\n            percent={30}\r\n            value={23000}\r\n            heading=\"Products\"\r\n            color=\"rgb(75 0 255)\"\r\n          />\r\n        </section>\r\n\r\n        <section className=\"graph-container\">\r\n          <div className=\"revenue-chart\">\r\n            <h2>Revenue & Transaction</h2>\r\n            <BarChart\r\n              data_2={[300, 144, 433, 655, 237, 755, 190]}\r\n              data_1={[200, 444, 343, 556, 778, 455, 990]}\r\n              title_1=\"Revenue\"\r\n              title_2=\"Transaction\"\r\n              bgColor_1=\"rgb(0,115,255)\"\r\n              bgColor_2=\"rgba(53,162,235,0.8)\"\r\n            />\r\n          </div>\r\n\r\n          {/* <div className=\"dashboard-categories\">\r\n            <h2>Inventory</h2>\r\n            <div>\r\n              {data.categories.map((i) => (\r\n                <CategoryItem\r\n                  key={i.heading}\r\n                  heading={i.heading}\r\n                  value={i.value}\r\n                  color={`hsl(${i.value * 4},${i.value}%,50%)`}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div> */}\r\n        </section>\r\n\r\n        {/* <section className=\"transaction-container\">\r\n          <div className=\"gender-chart\">\r\n            <h2>Gender Ratio</h2>\r\n            <DoughnutChart\r\n              labels={[\"Female\", \"Male\"]}\r\n              data={[12, 19]}\r\n              backgroundColor={[\"hsl(340,82%,56%)\", \"rgba(53,162,235,0.8)\"]}\r\n              cutout={90}\r\n            />\r\n            <p>\r\n              <BiMaleFemale />\r\n            </p>\r\n          </div>\r\n\r\n          <Table data={data.transaction} />\r\n        </section> */}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WidgetItem = ({ heading, value, amount = false, percent, color }) => (\r\n  <article className=\"widget\">\r\n    <div className=\"widget-info\">\r\n      <p>{heading}</p>\r\n      <h4>{amount ? `$${value}` : value}</h4>\r\n      {percent > 0 ? (\r\n        <span className=\"green\">\r\n          <HiTrendingUp />+{percent}%{\" \"}\r\n        </span>\r\n      ) : (\r\n        <span className=\"red\">\r\n          <HiTrendingDown /> {percent}%{\" \"}\r\n        </span>\r\n      )}\r\n    </div>\r\n\r\n    <div\r\n      className=\"widget-circle\"\r\n      style={{\r\n        background: `conic-gradient(\r\n        ${color} ${(Math.abs(percent) / 100) * 360}deg, rgb(255,255,255) 0\r\n      )`,\r\n      }}\r\n    >\r\n      <span style={{ color }}>{percent}%</span>\r\n    </div>\r\n  </article>\r\n);\r\n\r\nconst CategoryItem = ({ color, value, heading }) => (\r\n  <div className=\"category-item\">\r\n    <h5>{heading}</h5>\r\n    <div>\r\n      <div\r\n        style={{\r\n          backgroundColor: color,\r\n          width: `${value}%`,\r\n        }}\r\n      ></div>\r\n    </div>\r\n    <span>{value}%</span>\r\n  </div>\r\n);\r\n\r\nexport default Dashboard;\r\n"],"names":["DivOne","_jsxs","children","_jsx","Li","text","url","Icon","RiDashboardFill","RiShoppingBagFill","IoIosPeople","AiFillFileText","_ref","location","useLocation","style","backgroundColor","pathname","includes","Link","to","color","AdminSidebar","className","columns","data","containerClassname","heading","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","useSortBy","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","PointElement","LineElement","Filler","months","BarChart","data_1","data_2","title_1","title_2","bgColor_1","bgColor_2","horizontal","labels","options","responsive","indexAxis","plugins","legend","display","title","scales","y","beginAtZero","grid","x","datasets","label","barThickness","barPercentage","categoryPercentage","Bar","width","WidgetItem","value","amount","percent","concat","HiTrendingUp","HiTrendingDown","background","Math","abs","Dashboard","BsSearch","type","placeholder","FaRegBell","src","alt"],"sourceRoot":""}