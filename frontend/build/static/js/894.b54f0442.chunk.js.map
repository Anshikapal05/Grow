{"version":3,"file":"static/js/894.b54f0442.chunk.js","mappings":"kKAIA,MAiHA,EAjHeA,KACX,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,MAwBnC,OACIO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,SACIC,KAAK,OACLC,YAAY,YACZC,MAAOhB,EACPiB,SA7BYC,IACxBjB,EAAciB,EAAMC,OAAOH,MAAM,KA8BzBH,EAAAA,EAAAA,KAAA,UAAQD,UAAU,aAAaQ,QA3BvBC,UAGhB,GAFAC,EAAEC,iBACFC,QAAQC,IAAIzB,GACc,KAAtBA,EAAW0B,OAAf,CAIApB,GAAa,GACb,IACI,MAAMqB,QAAiBC,EAAAA,EAAMC,IAAI,6CAADC,OAA8C9B,IAC9EI,EAAiBuB,EAASI,KAAO,CAACJ,EAASI,MAAQ,IACnDvB,EAAS,KACb,CAAE,MAAOD,GACLC,EAAS,sCACb,CACAF,GAAa,EATb,MAFIF,EAAiB,GAWF,EAYyCO,SAAC,WACpDN,IAAaQ,EAAAA,EAAAA,KAAA,KAAAF,SAAG,eAChBJ,IAASM,EAAAA,EAAAA,KAAA,KAAAF,SAAIJ,QAEhBF,IAAcE,GAASyB,MAAMC,QAAQ9B,KACnCU,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,SAC1BR,EAAc+B,KAAKC,IAChB1B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,OAAMD,SAAA,EACjBE,EAAAA,EAAAA,KAAA,MAAAF,SAAKwB,EAAOC,QACZvB,EAAAA,EAAAA,KAAA,OAAKwB,IAAKF,EAAOG,MAAOC,IAAKJ,EAAOC,KAAMxB,UAAU,gBACpDH,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,WAASwB,EAAOK,WAHIL,EAAOM,UAQ/C,C","sources":["pages/consumer/Search.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Search = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        console.log(searchTerm);\r\n        if (searchTerm.trim() === '') {\r\n            setSearchResults([]);\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/v1/product/name/${searchTerm}`);\r\n            setSearchResults(response.data ? [response.data] : []);\r\n            setError(null);\r\n        } catch (error) {\r\n            setError('Error fetching data from the server');\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                />\r\n                <button className=\"search-btn\" onClick={handleClick}>Search</button>\r\n                {isLoading && <p>Loading...</p>}\r\n                {error && <p>{error}</p>}\r\n            </div>\r\n            {!isLoading && !error && Array.isArray(searchResults) && (\r\n                <div className=\"card-container\">\r\n                    {searchResults.map((result) => (\r\n                        <div className=\"card\" key={result.id}>\r\n                            <h3>{result.name}</h3>\r\n                            <img src={result.photo} alt={result.name} className=\"card-image\"/>\r\n                            <p>Price: ${result.price}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// const Search = () => {\r\n//     const [searchTerm, setSearchTerm] = useState('');\r\n//     const [searchResults, setSearchResults] = useState([]);\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n//     const [error, setError] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             setIsLoading(true);\r\n//             try {\r\n//                 const response = await axios.get(`http://localhost:5000/api/v1/product/name/${searchTerm}`);\r\n//                 setSearchResults(response.data);\r\n//                 setError(null);\r\n//             } catch (error) {\r\n//                 setError('Error fetching data from the server');\r\n//             }\r\n//             setIsLoading(false);\r\n//         };\r\n\r\n//         if (searchTerm.trim() !== '') {\r\n//             fetchData();\r\n//         } else {\r\n//             setSearchResults([]);\r\n//         }\r\n//     }, [searchTerm]);\r\n\r\n//     // const handleSearchChange = (event) => {\r\n//     //     setSearchTerm(event.target.value);\r\n//     // };\r\n\r\n//     const handleClick = (e) => {\r\n//         e.preventDefault();\r\n//         setSearchTerm('event.target.value');\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"search-container\">\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search...\"\r\n//                 value={searchTerm}\r\n//                 // onChange={handleSearchChange}\r\n//             />\r\n//             <button className=\"search-btn\" onClick={handleClick} value={searchTerm}>Search</button>\r\n//             {isLoading && <p>Loading...</p>}\r\n//             {error && <p>{error}</p>}\r\n//             {!isLoading && !error && Array.isArray(searchResults) && (\r\n//     <ul>\r\n//         {searchResults.map((result) => (\r\n//             <li key={result.id}>{result.name}</li>\r\n//         ))}\r\n//     </ul>\r\n// )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nexport default Search;\r\n"],"names":["Search","searchTerm","setSearchTerm","useState","searchResults","setSearchResults","isLoading","setIsLoading","error","setError","_jsxs","_Fragment","children","className","_jsx","type","placeholder","value","onChange","event","target","onClick","async","e","preventDefault","console","log","trim","response","axios","get","concat","data","Array","isArray","map","result","name","src","photo","alt","price","id"],"sourceRoot":""}