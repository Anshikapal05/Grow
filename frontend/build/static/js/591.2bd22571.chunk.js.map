{"version":3,"file":"static/js/591.2bd22571.chunk.js","mappings":"4KAwFA,QApFA,SAAkBA,EAASC,EAAMC,EAAoBC,GAAkC,IAAzBC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1E,OAAO,WACL,MAAMG,EAAU,CACdR,UACAC,OACAQ,aAAc,CACZC,SAAU,KAIR,cACJC,EAAa,kBACbC,EAAiB,aACjBC,EAAY,KACZC,EAAI,WACJC,EAAU,SACVC,EAAQ,UACRC,EACAC,OAAO,UAAEC,GAAW,aACpBC,EAAY,YACZC,EAAW,gBACXC,IACEC,EAAAA,EAAAA,UAASf,EAASgB,EAAAA,UAAWC,EAAAA,eAEjC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWzB,EAAmB0B,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,UAASC,SAAEzB,KAEzBuB,EAAAA,EAAAA,MAAA,SAAOC,UAAU,WAAYhB,IAAeiB,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,SAAAD,SACGf,EAAaiB,KAAKC,IACjBF,EAAAA,EAAAA,KAAA,SAAQE,EAAYC,sBAAqBJ,SACtCG,EAAYE,QAAQH,KAAKI,IACxBR,EAAAA,EAAAA,MAAA,SAAwBQ,EAAOC,eAAeD,EAAOE,wBAAuBR,SAAA,CAEzEM,EAAOG,OAAO,UACdH,EAAOI,WACNZ,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CACG,IACAM,EAAOK,cACNV,EAAAA,EAAAA,KAACW,EAAAA,IAAuB,KAExBX,EAAAA,EAAAA,KAACY,EAAAA,IAAsB,SATtBP,EAAOQ,aAkBxBb,EAAAA,EAAAA,KAAA,YAAWjB,IAAmBgB,SAC3Bd,EAAKgB,KAAKa,IACT5B,EAAW4B,IAGTd,EAAAA,EAAAA,KAAA,SAAQc,EAAIC,cAAahB,SACtBe,EAAIE,MAAMf,KAAKgB,IACdjB,EAAAA,EAAAA,KAAA,SAAQiB,EAAKC,eAAcnB,SAAGkB,EAAKT,OAAO,sBAQrDjC,IACEsB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAAC,KACtCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,UAAQmB,UAAW1B,EAAiB2B,QAAS7B,EAAaQ,SAAC,UAG3DC,EAAAA,EAAAA,KAAA,QAAAD,SAAA,GAAAsB,OAAU/B,EAAY,EAAC,QAAA+B,OAAOjC,MAC9BY,EAAAA,EAAAA,KAAA,UAAQmB,UAAW3B,EAAa4B,QAASjC,EAASY,SAAC,iBAQ/D,CACD,E,aClFA,MAoCA,EApCgBuB,KACd,MAAMnD,EAAUoD,EAAAA,SACd,IAAM,CACJ,CACEC,OAAQ,WACRC,SAAU,QACVC,KAAMC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAK3B,EAAAA,EAAAA,KAAA,OAAK6B,IAAKD,EAAOE,IAAI,UAAUC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAAY,GAEnG,CACET,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,QACRC,SAAU,WAGd,IAKIS,EAAYX,EAAAA,SAAc,IAAMnD,EAAAA,GAAe,IAE/C+D,EAAiBC,EAASjE,EAAS+D,EAAW,kBAAmB,IAAI,GAE3E,OACErC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,gBAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAACmC,EAAc,QAEb,C","sources":["components/main/TableHOC.jsx","pages/producer/MyItems.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { AiOutlineSortAscending, AiOutlineSortDescending } from \"react-icons/ai\";\r\nimport { usePagination, useSortBy, useTable } from \"react-table\";\r\n\r\nfunction TableHOC(columns, data, containerClassname, heading, showPagination = false) {\r\n  return function HOC() {\r\n    const options = {\r\n      columns,\r\n      data,\r\n      initialState: {\r\n        pageSize: 6,\r\n      },\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      page,\r\n      prepareRow,\r\n      nextPage,\r\n      pageCount,\r\n      state: { pageIndex },\r\n      previousPage,\r\n      canNextPage,\r\n      canPreviousPage,\r\n    } = useTable(options, useSortBy, usePagination);\r\n\r\n    return (\r\n      <div className={containerClassname}>\r\n        <h2 className=\"heading\">{heading}</h2>\r\n\r\n        <table className=\"table\" {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th key={column.id} {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n\r\n                    {column.render(\"Header\")}\r\n                    {column.isSorted && (\r\n                      <span>\r\n                        {\" \"}\r\n                        {column.isSortedDesc ? (\r\n                          <AiOutlineSortDescending />\r\n                        ) : (\r\n                          <AiOutlineSortAscending />\r\n                        )}\r\n                      </span>\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row) => {\r\n              prepareRow(row);\r\n\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {showPagination && (\r\n           <div className=\"pagination-container\"> {/* Wrap pagination controls in a container */}\r\n           <div className=\"table-pagination\">\r\n             <button disabled={!canPreviousPage} onClick={previousPage}>\r\n               Prev\r\n             </button>\r\n             <span>{`${pageIndex + 1} of ${pageCount}`}</span>\r\n             <button disabled={!canNextPage} onClick={nextPage}>\r\n               Next\r\n             </button>\r\n           </div>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n };\r\n}\r\n\r\nexport default TableHOC;","import React from 'react';\r\nimport TableHOC from '../../components/main/TableHOC';\r\nimport data from '../../assets/data.json';\r\n\r\nconst MyItems = () => {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Products',\r\n        accessor: 'photo', // Assuming each item has a 'photo' property\r\n        Cell: ({ value }) => <img src={value} alt=\"Product\" style={{ width: '100px', height: 'auto' }} />,\r\n      },\r\n      {\r\n        Header: 'Price',\r\n        accessor: 'price',\r\n      },\r\n      {\r\n        Header: 'Stock',\r\n        accessor: 'stock',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Define your table data\r\n  // const tableData = React.useMemo(() => data.products, [data]);\r\n  const tableData = React.useMemo(() => data.products, []);\r\n\r\n  const GeneratedTable = TableHOC(columns, tableData, \"table-container\", \"\", true);\r\n\r\n  return (\r\n    <div className='table-container'>\r\n      <h2 className=\"table-title\">Your Items</h2>\r\n      <div className=\"table-wrapper\">\r\n        <GeneratedTable />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyItems;\r\n"],"names":["columns","data","containerClassname","heading","showPagination","arguments","length","undefined","options","initialState","pageSize","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","nextPage","pageCount","state","pageIndex","previousPage","canNextPage","canPreviousPage","useTable","useSortBy","usePagination","_jsxs","className","children","_jsx","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","AiOutlineSortDescending","AiOutlineSortAscending","id","row","getRowProps","cells","cell","getCellProps","disabled","onClick","concat","MyItems","React","Header","accessor","Cell","_ref","value","src","alt","style","width","height","tableData","GeneratedTable","TableHOC"],"sourceRoot":""}